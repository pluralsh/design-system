name: CI
on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: Read Node.js version from package.json
        run: echo "nodeVersion=$(node -p "require('./package.json').engines.node")" >> $GITHUB_OUTPUT
        id: engines
      - name: 'Setup Node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.engines.outputs.nodeVersion }}
      - run: |
          yarn install --immutable
      - run: yarn build
  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: Read Node.js version from package.json
        run: echo "nodeVersion=$(node -p "require('./package.json').engines.node")" >> $GITHUB_OUTPUT
        id: engines
      - name: 'Setup Node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.engines.outputs.nodeVersion }}
      - run: yarn install --immutable
      - run: yarn build:storybook
  test:
    name: Unit test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: Read Node.js version from package.json
        run: echo "nodeVersion=$(node -p "require('./package.json').engines.node")" >> $GITHUB_OUTPUT
        id: engines
      - name: 'Setup Node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.engines.outputs.nodeVersion }}
      - run: |
          yarn install --immutable
      - run: yarn test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: Read Node.js version from package.json
        run: echo "nodeVersion=$(node -p "require('./package.json').engines.node")" >> $GITHUB_OUTPUT
        id: engines
      - name: 'Setup Node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.engines.outputs.nodeVersion }}
      - run: |
          yarn install --immutable
      - run: yarn lint
  preview:
    name: Create preview
    if: ${{ github.triggering_actor != 'plural-renovate[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: Read Node.js version from package.json
        run: echo "nodeVersion=$(node -p "require('./package.json').engines.node")" >> $GITHUB_OUTPUT
        id: engines
      - name: 'Setup Node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.engines.outputs.nodeVersion }}
      - run: |
          yarn install --immutable
      - run: yarn build:storybook
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PLURALSH_DESIGN }}'
          projectId: pluralsh-design
  trivy-scan:
    name: Trivy fs scan
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          security-checks: 'vuln,secret'
          ignore-unfixed: true
          #severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
